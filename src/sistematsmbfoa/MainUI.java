package sistematsmbfoa;

import com.adriangarcia.metaheuristics.tsmbfoa.Configurator;
import com.adriangarcia.metaheuristics.tsmbfoa.Problem;
import com.adriangarcia.metaheuristics.tsmbfoa.RunTsmbfoa;
import com.adriangarcia.cnop.*;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.NumberFormat;
import java.util.Arrays;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;


/**
 * 
 * @author Jos√© Adrian
 */
public class MainUI extends JFrame implements Runnable{

    private int posicion;
    private Problem problema;
    private Configurator configuracionAuxiliar;
    private String[] nombresCECC2006, nombresCECC2010;        
    
    private Timer tiempo;    
    int execution, count;
    
    
    Thread h1;
    Toast toast; 
    
    public MainUI() {
        initComponents();                          
        this.setExtendedState(this.MAXIMIZED_BOTH);                   
                
        
        this.nombresCECC2006 = new String[21];
        this.nombresCECC2010 = new String[18];
        this.generarNombreCEC2006();
        this.generarNombreCEC2010();
        this.posicion = 0;
        this.setLocationRelativeTo(null);
        //this.setExtendedState(MainUI.MAXIMIZED_BOTH);
        this.cargarProblemaOptimizacion(0);
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoDefinidoParametro = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        progreso = new javax.swing.JProgressBar();
        lblRunning = new javax.swing.JLabel();
        btnResults = new javax.swing.JButton();
        btnCleaner = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        boxAreaEstudio = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        boxProblemaOptimizacion = new javax.swing.JComboBox();
        radioRecomendada = new javax.swing.JRadioButton();
        radioDefinida = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        spinnerExecution = new javax.swing.JSpinner();
        jPanel5 = new javax.swing.JPanel();
        txtBacterias = new javax.swing.JTextField();
        txtTamanoPaso = new javax.swing.JTextField();
        txtCiclosQuimiotaxis = new javax.swing.JTextField();
        txtFactorEscalamiento = new javax.swing.JTextField();
        txtBacteriasReproducir = new javax.swing.JTextField();
        txtFrecuenciaReproduccion = new javax.swing.JTextField();
        txtNumeroEvaluaciones = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtValorConocido = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        texRestricciones = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        texFuncion = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        txtVariables = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        texRangoVariable = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        resultsQuick = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JMetaBFOP UI ");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 16), new java.awt.Color(36, 160, 95))); // NOI18N

        btnStart.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnStart.setForeground(new java.awt.Color(255, 0, 0));
        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iniciar24.png"))); // NOI18N
        btnStart.setToolTipText("START ALGORITHM ");
        btnStart.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnStart.setBorderPainted(false);
        btnStart.setContentAreaFilled(false);
        btnStart.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnStart.setEnabled(false);
        btnStart.setFocusPainted(false);
        btnStart.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnStart.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iniciar32.png"))); // NOI18N
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        progreso.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        progreso.setToolTipText("");

        lblRunning.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        lblRunning.setText("Reading");

        btnResults.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnResults.setForeground(new java.awt.Color(0, 0, 255));
        btnResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/resultado24.png"))); // NOI18N
        btnResults.setToolTipText("RESULTS");
        btnResults.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnResults.setBorderPainted(false);
        btnResults.setContentAreaFilled(false);
        btnResults.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnResults.setEnabled(false);
        btnResults.setFocusPainted(false);
        btnResults.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnResults.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/resultado32.png"))); // NOI18N
        btnResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultsActionPerformed(evt);
            }
        });

        btnCleaner.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCleaner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar1.png"))); // NOI18N
        btnCleaner.setToolTipText("CLEAN UP");
        btnCleaner.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnCleaner.setBorderPainted(false);
        btnCleaner.setContentAreaFilled(false);
        btnCleaner.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCleaner.setFocusPainted(false);
        btnCleaner.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar.png"))); // NOI18N
        btnCleaner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanerActionPerformed(evt);
            }
        });

        btnStop.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnStop.setForeground(new java.awt.Color(0, 0, 255));
        btnStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/stop24.png"))); // NOI18N
        btnStop.setToolTipText("STOP EXECUTION");
        btnStop.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnStop.setBorderPainted(false);
        btnStop.setContentAreaFilled(false);
        btnStop.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnStop.setEnabled(false);
        btnStop.setFocusPainted(false);
        btnStop.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnStop.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/stop32.png"))); // NOI18N
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(progreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblRunning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(btnCleaner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnResults, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnCleaner, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRunning, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progreso, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 75)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 204, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("JMeta");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Algorithm execution", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 16), new java.awt.Color(36, 160, 95))); // NOI18N
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "First steps", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 14), new java.awt.Color(40, 79, 147))); // NOI18N

        boxAreaEstudio.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        boxAreaEstudio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Mechanical Engineering", "Chemistry", "CEC2006 problems", "User defined" }));
        boxAreaEstudio.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 208, 249), 1, true));
        boxAreaEstudio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boxAreaEstudio.setFocusable(false);
        boxAreaEstudio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxAreaEstudioActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel7.setText("STUDY AREA");

        jLabel9.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel9.setText("OPTIMIZATION PROBLEM");

        boxProblemaOptimizacion.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        boxProblemaOptimizacion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 208, 249), 1, true));
        boxProblemaOptimizacion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boxProblemaOptimizacion.setFocusable(false);
        boxProblemaOptimizacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxProblemaOptimizacionActionPerformed(evt);
            }
        });

        grupoDefinidoParametro.add(radioRecomendada);
        radioRecomendada.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        radioRecomendada.setText("Recommended");
        radioRecomendada.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioRecomendada.setFocusable(false);
        radioRecomendada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRecomendadaActionPerformed(evt);
            }
        });

        grupoDefinidoParametro.add(radioDefinida);
        radioDefinida.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        radioDefinida.setText("User Defined");
        radioDefinida.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioDefinida.setFocusable(false);
        radioDefinida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDefinidaActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel10.setText("PARAMETER SETTING");

        jLabel11.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel11.setText("NUMBER OF ITERATIONS");

        spinnerExecution.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        spinnerExecution.setModel(new javax.swing.SpinnerNumberModel(1, 1, 30, 1));
        spinnerExecution.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 208, 249)));
        spinnerExecution.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        spinnerExecution.setFocusable(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Parameter fit", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 14), new java.awt.Color(40, 79, 147))); // NOI18N

        txtBacterias.setEditable(false);
        txtBacterias.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtBacterias.setForeground(new java.awt.Color(36, 160, 95));
        txtBacterias.setBorder(null);

        txtTamanoPaso.setEditable(false);
        txtTamanoPaso.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtTamanoPaso.setForeground(new java.awt.Color(36, 160, 95));
        txtTamanoPaso.setBorder(null);

        txtCiclosQuimiotaxis.setEditable(false);
        txtCiclosQuimiotaxis.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtCiclosQuimiotaxis.setForeground(new java.awt.Color(36, 160, 95));
        txtCiclosQuimiotaxis.setBorder(null);

        txtFactorEscalamiento.setEditable(false);
        txtFactorEscalamiento.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtFactorEscalamiento.setForeground(new java.awt.Color(36, 160, 95));
        txtFactorEscalamiento.setBorder(null);

        txtBacteriasReproducir.setEditable(false);
        txtBacteriasReproducir.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtBacteriasReproducir.setForeground(new java.awt.Color(36, 160, 95));
        txtBacteriasReproducir.setBorder(null);

        txtFrecuenciaReproduccion.setEditable(false);
        txtFrecuenciaReproduccion.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtFrecuenciaReproduccion.setForeground(new java.awt.Color(36, 160, 95));
        txtFrecuenciaReproduccion.setBorder(null);

        txtNumeroEvaluaciones.setEditable(false);
        txtNumeroEvaluaciones.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtNumeroEvaluaciones.setForeground(new java.awt.Color(36, 160, 95));
        txtNumeroEvaluaciones.setBorder(null);

        jLabel19.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel19.setText("Bacteria");

        jLabel20.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel20.setText("Stepsize");

        jLabel21.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel21.setText("Chemotoxic cycles");

        jLabel22.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel22.setText("Scaling factor");

        jLabel24.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel24.setText("Bacteria to reproduce");

        jLabel23.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel23.setText("Reproduction frequency");

        jLabel25.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel25.setText("Evaluations");

        jButton4.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        jButton4.setText("Edit");
        jButton4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton4.setFocusPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel24)
                            .addComponent(jLabel23)
                            .addComponent(jLabel25))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtBacteriasReproducir, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFactorEscalamiento, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCiclosQuimiotaxis, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTamanoPaso, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBacterias, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFrecuenciaReproduccion)
                            .addComponent(txtNumeroEvaluaciones))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBacterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTamanoPaso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCiclosQuimiotaxis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFactorEscalamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBacteriasReproducir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFrecuenciaReproduccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumeroEvaluaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtBacteriasReproducir.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 7, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel11))
                            .addComponent(boxAreaEstudio, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxProblemaOptimizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioRecomendada, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(radioDefinida))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spinnerExecution, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxAreaEstudio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxProblemaOptimizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinnerExecution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(radioRecomendada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioDefinida)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel3);

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Optimization Problem", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 16), new java.awt.Color(36, 160, 95))); // NOI18N
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel12.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel12.setText("Name");

        jLabel14.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel14.setText("Best known value");

        txtNombre.setEditable(false);
        txtNombre.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        txtNombre.setBorder(null);

        txtValorConocido.setEditable(false);
        txtValorConocido.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        txtValorConocido.setBorder(null);

        jLabel15.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel15.setText("Objective Function");

        jScrollPane1.setBorder(null);

        texRestricciones.setEditable(false);
        texRestricciones.setBackground(new java.awt.Color(240, 240, 240));
        texRestricciones.setColumns(20);
        texRestricciones.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        texRestricciones.setLineWrap(true);
        texRestricciones.setRows(5);
        texRestricciones.setWrapStyleWord(true);
        jScrollPane1.setViewportView(texRestricciones);

        jLabel16.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel16.setText("Order of variables");

        jLabel17.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel17.setText("Constraints");

        jScrollPane2.setBorder(null);

        texFuncion.setEditable(false);
        texFuncion.setBackground(new java.awt.Color(240, 240, 240));
        texFuncion.setColumns(20);
        texFuncion.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        texFuncion.setLineWrap(true);
        texFuncion.setRows(5);
        texFuncion.setWrapStyleWord(true);
        texFuncion.setBorder(null);
        texFuncion.setVerifyInputWhenFocusTarget(false);
        jScrollPane2.setViewportView(texFuncion);

        jLabel18.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel18.setText("Variable range");

        txtVariables.setEditable(false);
        txtVariables.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        txtVariables.setBorder(null);

        jScrollPane3.setBorder(null);

        texRangoVariable.setEditable(false);
        texRangoVariable.setBackground(new java.awt.Color(240, 240, 240));
        texRangoVariable.setColumns(20);
        texRangoVariable.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        texRangoVariable.setLineWrap(true);
        texRangoVariable.setRows(5);
        texRangoVariable.setWrapStyleWord(true);
        jScrollPane3.setViewportView(texRangoVariable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 448, Short.MAX_VALUE))
                            .addComponent(txtNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtValorConocido)))
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtVariables)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorConocido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel16)
                .addGap(6, 6, 6)
                .addComponent(txtVariables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel17)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel18)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane5.setViewportView(jPanel4);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Fast results", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 14), new java.awt.Color(40, 79, 147))); // NOI18N

        resultsQuick.setEditable(false);
        resultsQuick.setColumns(20);
        resultsQuick.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        resultsQuick.setLineWrap(true);
        resultsQuick.setRows(5);
        jScrollPane6.setViewportView(resultsQuick);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane6)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 70)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("BFOP");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("METAheuristic with Bacteria For Optimization Problems UI");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel3))
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addComponent(jScrollPane5)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE))
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N

        jMenuItem2.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/limpiar1.png"))); // NOI18N
        jMenuItem2.setText("Clean up");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/previous.png"))); // NOI18N
        jMenuItem1.setText("Previous");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cerrar.png"))); // NOI18N
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenu2.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N

        jMenuItem4.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/acd24.png"))); // NOI18N
        jMenuItem4.setText("About");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Start start = new Start();
        start.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultsActionPerformed
        Results results = new Results(this, true,this.problema, this.configuracionAuxiliar);        
        results.setVisible(true);
    }//GEN-LAST:event_btnResultsActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (this.radioDefinida.isSelected() || this.radioRecomendada.isSelected()) {
            
            this.setSettingParameter();

            ParameterCalibration cf = new ParameterCalibration(this, true, this,this.configuracionAuxiliar);
            cf.setVisible(true);
        }else{
            this.radioDefinida.doClick();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnCleanerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanerActionPerformed
        this.lblRunning.setForeground(Color.BLACK);
        this.resultsQuick.setForeground(Color.BLACK);
        this.lblRunning.setText("Reading");
        this.progreso.setValue(0);
        this.limpiarProblemaOptimizacion();
        this.limpiarConfiguracion();
        this.boxAreaEstudio.setSelectedIndex(0);
        this.boxProblemaOptimizacion.removeAllItems();
        this.boxProblemaOptimizacion.setEnabled(false);
        this.spinnerExecution.setValue(1);
        this.btnResults.setEnabled(false);
        this.btnStop.setEnabled(false);
        this.resultsQuick.setText("");
    }//GEN-LAST:event_btnCleanerActionPerformed

    private void radioDefinidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDefinidaActionPerformed
        ParameterCalibration cf = new ParameterCalibration(this, true, this);
        cf.setVisible(true);
    }//GEN-LAST:event_radioDefinidaActionPerformed

    private void radioRecomendadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRecomendadaActionPerformed
        if (this.problema != null) {
            this.mostrarConfiguracionRecomendada(this.problema.getRecommendedSetting());
        }else {
            JOptionPane.showMessageDialog(null, "No ha seleccionado un problema de optimizaci√≥n.","No hay selecci√≥n",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_radioRecomendadaActionPerformed

    private void boxProblemaOptimizacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxProblemaOptimizacionActionPerformed
       
        int indexProblema = 0;
        indexProblema = this.boxProblemaOptimizacion.getSelectedIndex();

        switch(this.posicion){
            case 1:
            switch(indexProblema){
                case 1: this.problema = new PressureVessel();           break;
                case 2: this.problema = new TensionCompressionSpring(); break;
                default:
                this.limpiarProblemaOptimizacion();
            }
            break;
            case 2:
            switch(indexProblema){
                case 1: this.problema = new ProcessSynthesisMINLP();                    break;
                case 2: this.problema = new DesignReinforcedConcreteBeam();             break;
                case 3: this.problema = new QuadraticallyConstrainedQuadraticProgram(); break;
                default: this.limpiarProblemaOptimizacion();

            }
            break;
            case 3:
            switch(indexProblema){
                case 1: this.problema = new G01_CEC2006(); break;
                case 2: this.problema = new G02_CEC2006(); break;
                case 3: this.problema = new G03_CEC2006(); break;
                case 4: this.problema = new G04_CEC2006(); break;
                case 5: this.problema = new G05_CEC2006(); break;
                case 6: this.problema = new G06_CEC2006(); break;
                case 7: this.problema = new G07_CEC2006(); break;
                case 8: this.problema = new G08_CEC2006(); break;
                case 9: this.problema = new G09_CEC2006(); break;
                case 10: this.problema = new G10_CEC2006(); break;
                case 11: this.problema = new G11_CEC2006(); break;
                case 12: this.problema = new G12_CEC2006(); break;
                case 13: this.problema = new G13_CEC2006(); break;
                //case 14: this.problema = new G14_CEC2006(); break;
                case 15: this.problema = new G15_CEC2006(); break;
                case 16: this.problema = new G17_CEC2006(); break;
                case 17: this.problema = new G18_CEC2006(); break;
                case 18: this.problema = new G21_CEC2006(); break;
                case 19: this.problema = new G22_CEC2006(); break;
                case 20: this.problema = new G23_CEC2006(); break;
                case 21: this.problema = new G24_CEC2006(); break;
                default:
                this.limpiarProblemaOptimizacion();

            }
            break;
            case 4:
                switch(indexProblema){
                    case 1: //this.problema = new C01_CEC2010(); break;
                }
                
                break;

        }
        if (!this.radioDefinida.isSelected()) {
            this.limpiarConfiguracion();
        }

        if (indexProblema > 0) {
            System.out.println(this.problema.getNameProblem());
            this.mostrarProblemaOptimizacion(this.problema);
                        if (this.problema != null) {
                            this.radioRecomendada.doClick();
                            this.btnStart.setEnabled(true);
                        }                        
        }

    }//GEN-LAST:event_boxProblemaOptimizacionActionPerformed
      
  
    private void boxAreaEstudioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxAreaEstudioActionPerformed
        this.posicion = this.boxAreaEstudio.getSelectedIndex();
        this.cargarProblemaOptimizacion(this.posicion);
    }//GEN-LAST:event_boxAreaEstudioActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        
        this.execution = Integer.parseInt(this.spinnerExecution.getValue().toString());        
        
        this.lblRunning.setForeground(Color.BLACK);
        this.resultsQuick.setForeground(Color.BLACK);
        this.lblRunning.setText("Please wait: "+ execution +" independent executions..."); 
        
        this.resultsQuick.setText("-------------- We started! --------------"
                                            + "\n" +this.problema.getNameProblem()
                    +           "\n-----------------------------------------\n");
        
        
        h1 = new Thread(this);
        h1.start(); 
        
        iniciarProgreso();
        
        
        this.btnStop.setEnabled(true);
        this.btnStart.setEnabled(false);
        this.btnResults.setEnabled(false);
        this.btnCleaner.setEnabled(false);
    }//GEN-LAST:event_btnStartActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.btnCleaner.doClick();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
        
        int index = JOptionPane.showConfirmDialog(this, "Do you really want to cancel the execution?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if (index == 0) {
            
            h1.stop();
            tiempo.stop();
            
            progreso.setForeground(Color.RED);
            
            this.btnStop.setEnabled(false);
            this.btnStart.setEnabled(true);
            this.btnCleaner.setEnabled(true);
            
            this.lblRunning.setForeground(new Color(255, 0, 0));
            this.lblRunning.setText("Cancelled");
            
            this.resultsQuick.setForeground(Color.RED);
            this.resultsQuick.setText("-------------- Results --------------"
                                            + "\nOperation cancelled"
                    +               "\n-------------------------------------");
            
        }
        
        
        
    }//GEN-LAST:event_btnStopActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        About about = new About(this, true);
        about.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox boxAreaEstudio;
    private javax.swing.JComboBox boxProblemaOptimizacion;
    private javax.swing.JButton btnCleaner;
    private javax.swing.JButton btnResults;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.ButtonGroup grupoDefinidoParametro;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblRunning;
    private javax.swing.JProgressBar progreso;
    private javax.swing.JRadioButton radioDefinida;
    private javax.swing.JRadioButton radioRecomendada;
    private javax.swing.JTextArea resultsQuick;
    private javax.swing.JSpinner spinnerExecution;
    private javax.swing.JTextArea texFuncion;
    private javax.swing.JTextArea texRangoVariable;
    private javax.swing.JTextArea texRestricciones;
    private javax.swing.JTextField txtBacterias;
    private javax.swing.JTextField txtBacteriasReproducir;
    private javax.swing.JTextField txtCiclosQuimiotaxis;
    private javax.swing.JTextField txtFactorEscalamiento;
    private javax.swing.JTextField txtFrecuenciaReproduccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumeroEvaluaciones;
    private javax.swing.JTextField txtTamanoPaso;
    private javax.swing.JTextField txtValorConocido;
    private javax.swing.JTextField txtVariables;
    // End of variables declaration//GEN-END:variables


    private void cargarProblemaOptimizacion(int posicion){
        this.boxProblemaOptimizacion.removeAllItems();
        this.boxProblemaOptimizacion.addItem("");
        this.boxProblemaOptimizacion.setEnabled(true);        
        switch(posicion){           
            case 1:                
                this.boxProblemaOptimizacion.addItem("Pressure Vessel");
                this.boxProblemaOptimizacion.addItem("Tension/compression spring");                
                break;
            case 2:                
                this.boxProblemaOptimizacion.addItem("Process synthesis MINLP");                
                this.boxProblemaOptimizacion.addItem("Design of a reinforced concrete beam");
                this.boxProblemaOptimizacion.addItem("Quadratically constrained quadratic program");
                break;
            case 3:                
                for (int i = 0; i < this.nombresCECC2006.length; i++) {                    
                    this.boxProblemaOptimizacion.addItem(this.nombresCECC2006[i]);
                }                               
                break;
//            case 4:
//                for (int i = 0; i < this.nombresCECC2010.length; i++) {                    
//                    this.boxProblemaOptimizacion.addItem(this.nombresCECC2010[i]);
//                }
//                break;
            case 4:
                this.boxProblemaOptimizacion.setEnabled(false);
                InputOP ip = new InputOP(this, true, this);
                ip.setVisible(true);
                
                this.fillFields();
                                                                
                break;
                default: 
                    if (!this.radioDefinida.isSelected()) {
                        this.limpiarConfiguracion();
                    }
                    
                         this.limpiarProblemaOptimizacion();
                         this.boxProblemaOptimizacion.setEnabled(false);
        }
        
    }
    
     private void fillFields(){

            
            
            if (this.problema != null) {
                System.out.println(this.problema.getNameProblem());
                this.mostrarProblemaOptimizacion(this.problema);
                this.radioRecomendada.setEnabled(false);
                this.radioDefinida.doClick();
                this.btnStart.setEnabled(true);
            }else this.btnCleaner.doClick();
    }
    
    public void setNewProblem(Problem problem){
        this.problema = problem;
    }
    
    private void generarNombreCEC2006(){
        int contador = 0;
        for (int i = 1; i <= 24; i++) {                    
            if (i != 16 && i != 19 && i != 20) {                        
                this.nombresCECC2006[contador] = ((i < 10 ?"G0":"G") 
                        +  i + " CEC2006");  
                contador++;
            }                 
        }
    }
    
    private void generarNombreCEC2010(){        
        for (int i = 1; i <= 18; i++) {                                                       
                this.nombresCECC2010[i-1] = ((i < 10 ?"C0":"C") 
                        +  i + " CEC2010");                  
                            
        }
    }
    
    public void mostrarProblemaOptimizacion(Problem Problema){
        this.texRangoVariable.setText("");
        this.texRestricciones.setText("");
        
        this.txtNombre.setText(problema.getNameProblem());
        this.txtValorConocido.setText("" + problema.getBestKnownValue());
        this.texFuncion.setText("f(x) = " + problema.getFunction());
        this.txtVariables.setText(Arrays.toString(problema.getOrderVariables()));  
        
        String[][] obj = problema.getConstraintsInequality();        
        
        if (obj != null) {
            for (int i = 0; i < obj.length; i++) {
                this.texRestricciones.append("g(" + (i+1) + ") = " 
                        + obj[i][0] + " " + obj[i][2] + " " + obj[i][1] + "\n");
                
            }
        }
        obj = null;
        obj = problema.getConstraintsEquality();
        
        if (obj != null) {
            for (int i = 0; i < obj.length; i++) {
                this.texRestricciones.append("h(" + (i+1) + ") = " 
                        + obj[i][0] + " " + obj[i][2] + " " + obj[i][1] + "\n");
            }
        }
        double[][] rangos = problema.getRankVariable();
        
        if (rangos != null) {
            for (int i = 0; i < rangos.length; i++) {
                this.texRangoVariable.append(problema.getOrderVariables()[i]
                        +" = [" + rangos[i][0] +"," + rangos[i][1] + "]\t");                
            }
        }           
    }
    
    
    public void mostrarConfiguracionRecomendada(Configurator configuracion){
        NumberFormat nf = NumberFormat.getInstance();
        nf.setMinimumFractionDigits(8);
        this.txtBacterias.setText("" + configuracion.getSb());
        this.txtTamanoPaso.setText("" + nf.format(configuracion.getStepSize()));
        this.txtCiclosQuimiotaxis.setText("" + configuracion.getNc());
        this.txtFactorEscalamiento.setText("" + configuracion.getScalingFactor());
        this.txtBacteriasReproducir.setText("" + configuracion.getBacteriaReproduce());
        this.txtFrecuenciaReproduccion.setText("" + configuracion.getRepcycle());
        this.txtNumeroEvaluaciones.setText("" + configuracion.getEvaluations());
    }
    
    public void limpiarConfiguracion(){        
        this.txtBacterias.setText("");
        this.txtTamanoPaso.setText("");
        this.txtCiclosQuimiotaxis.setText("");
        this.txtFactorEscalamiento.setText("");
        this.txtBacteriasReproducir.setText("");
        this.txtFrecuenciaReproduccion.setText("");
        this.txtNumeroEvaluaciones.setText("");
    }
    
    public void limpiarProblemaOptimizacion(){
        this.btnStart.setEnabled(false);
        this.radioRecomendada.setEnabled(true);
        this.problema = null;
        this.texRangoVariable.setText("");
        this.texRestricciones.setText("");        
        this.txtNombre.setText("");
        this.txtValorConocido.setText("");
        this.texFuncion.setText("");
        this.txtVariables.setText("");                  
    }
    
    public void setSettingParameter(){
        
        this.configuracionAuxiliar = new Configurator();

            int sb = Integer.parseInt(this.txtBacterias.getText());
            double stepSize = Double.parseDouble(this.txtTamanoPaso.getText());
            int nc = Integer.parseInt(this.txtCiclosQuimiotaxis.getText());
            double scalingFactor = Double.parseDouble(this.txtFactorEscalamiento.getText());
            int bacteriaReproduce = Integer.parseInt(this.txtBacteriasReproducir.getText());
            int repcycle = Integer.parseInt(this.txtFrecuenciaReproduccion.getText());
            int evaluations = Integer.parseInt(this.txtNumeroEvaluaciones.getText());

            this.configuracionAuxiliar.setSb(sb);
            this.configuracionAuxiliar.setStepSize(stepSize);
            this.configuracionAuxiliar.setNc(nc);
            this.configuracionAuxiliar.setScalingFactor(scalingFactor);
            this.configuracionAuxiliar.setBacteriaReproduce(bacteriaReproduce);
            this.configuracionAuxiliar.setRepcycle(repcycle);
            this.configuracionAuxiliar.setEvaluations(evaluations);
    }          

    @Override
    public void run() {
        
        
            Thread ct = Thread.currentThread();
            
            while (ct == h1) {    
                this.toast = new Toast("We're done!", this.btnResults.getX(), this.btnResults.getY());
                this.setSettingParameter();                 
                problema.setExecutions(execution); 
                
                //this.problema.
                RunTsmbfoa run = new RunTsmbfoa();
                run.run(this.problema, this.configuracionAuxiliar, false, false);   
                
                                
                this.lblRunning.setForeground(new Color(0, 0, 255));                
                this.lblRunning.setText("Successful execution (total time: "+ this.problema.getTimeSeconds() +" seconds)");
                
                this.btnCleaner.setEnabled(true);
                this.btnStop.setEnabled(false);
                this.btnStart.setEnabled(true);
                this.btnResults.setEnabled(true);
                
                if (this.progreso.getValue() < 100) {
                    this.progreso.setValue(100);
                }
                
                int indexAux = this.problema.getBestResults()[0].length-1;
                double svrAux = -1;
                
                for (int i = 0; i < this.problema.getBestResults().length; i++) {                                                            
                    if (this.problema.getStatistic()[0] == this.problema.getBestResults()[i][indexAux-1]) {
                        svrAux = this.problema.getBestResults()[i][indexAux];
                    }
                }
                
                if (svrAux > 0) {
                    this.resultsQuick.setForeground(Color.red);
                }                                               
                
                this.resultsQuick.setText("-------------- We started! --------------"
                                            + "\n" +this.problema.getNameProblem()
                                            + "\nSuccessful execution "
                                            + "\n(total time: "               + this.problema.getTimeSeconds() +" seconds)"
                                            + "\nExecution: "                 + this.problema.getExecutions()                                            
                                            + "\nBest value:                " + this.problema.getStatistic()[0]
                                            + "\nConstraints violation sum: " + svrAux                                            
                    +           "\n-----------------------------------------\n");                
                tiempo.stop(); 
                this.toast.showtoast();
                h1.stop();                
                
            }

    }
    
    public void iniciarProgreso(){ 
        count = -1;
         progreso.setValue(0);
         progreso.setStringPainted(true);
         progreso.setForeground(Color.BLUE);
         tiempo = new Timer(20, new TimerListener());                  
         tiempo.start();
    }
    
    class TimerListener implements ActionListener{
        @Override
        public void actionPerformed(ActionEvent e) {      
            count++;
            if (problema.getAdvance() != progreso.getValue()) {
                progreso.setValue(problema.getAdvance());
            } 
            if (count == 15) {
                resultsQuick.append("o");
                count=0;
            }
            
        }
    }

}
