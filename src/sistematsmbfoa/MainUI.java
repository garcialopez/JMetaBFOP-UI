package sistematsmbfoa;

import com.garcialopez.cnops.*;
import com.garcialopez.metaheuristic.tsmbfoa.TSMBFOA;
import com.garcialopez.optimizationmodel.CNOP;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.Timer;

/**
 *
 * @author Jos√© Adrian
 */
public class MainUI extends JFrame implements Runnable {

    private int indexSelect = 0;
    private CNOP cnop;
    private TSMBFOA tsmbfoa;

    //revisar-------------------
    private Timer tiempo;
    int execution, count;

    Thread h1;
    Toast toast;
    //revisar-------------------

    @SuppressWarnings("unchecked")
    public MainUI() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setExtendedState(MainUI.MAXIMIZED_BOTH);
        //mostramos en el combobox de areas las que hay

        this.boxStudyArea.removeAllItems();
        this.boxStudyArea.addItem("Mechanical Engineering");
        this.boxStudyArea.addItem("Chemistry");
        this.boxStudyArea.addItem("CEC2006 problems");
        this.boxStudyArea.addItem("User defined");

        this.boxStudyArea.setSelectedIndex(0);

        this.showCNOPs(this.indexSelect);

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        grupoDefinidoParametro = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        progreso = new javax.swing.JProgressBar();
        lblRunning = new javax.swing.JLabel();
        btnResults = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        boxStudyArea = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        boxCnops = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        spinnerExecution = new javax.swing.JSpinner();
        jPanel5 = new javax.swing.JPanel();
        txtBacterias = new javax.swing.JTextField();
        txtTamanoPaso = new javax.swing.JTextField();
        txtCiclosQuimiotaxis = new javax.swing.JTextField();
        txtFactorEscalamiento = new javax.swing.JTextField();
        txtBacteriasReproducir = new javax.swing.JTextField();
        txtFrecuenciaReproduccion = new javax.swing.JTextField();
        txtNumeroEvaluaciones = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        radioRecomendada = new javax.swing.JRadioButton();
        radioDefinida = new javax.swing.JRadioButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtValorConocido = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        texRestricciones = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        texFuncion = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        txtVariables = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        texRangoVariable = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        resultsQuick = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JMetaBFOP UI ");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 16), new java.awt.Color(36, 160, 95))); // NOI18N

        btnStart.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnStart.setForeground(new java.awt.Color(255, 0, 0));
        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iniciar24.png"))); // NOI18N
        btnStart.setText("Run");
        btnStart.setToolTipText("START ALGORITHM ");
        btnStart.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnStart.setContentAreaFilled(false);
        btnStart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStart.setFocusCycleRoot(true);
        btnStart.setFocusPainted(false);
        btnStart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStart.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iniciar32.png"))); // NOI18N
        btnStart.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        progreso.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        progreso.setToolTipText("");

        lblRunning.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        lblRunning.setText("Reading");

        btnResults.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnResults.setForeground(new java.awt.Color(0, 0, 255));
        btnResults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/resultado24.png"))); // NOI18N
        btnResults.setText("Results");
        btnResults.setToolTipText("RESULTS");
        btnResults.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnResults.setContentAreaFilled(false);
        btnResults.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnResults.setEnabled(false);
        btnResults.setFocusCycleRoot(true);
        btnResults.setFocusPainted(false);
        btnResults.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnResults.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/resultado32.png"))); // NOI18N
        btnResults.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultsActionPerformed(evt);
            }
        });

        btnStop.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        btnStop.setForeground(new java.awt.Color(0, 0, 255));
        btnStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/stop24.png"))); // NOI18N
        btnStop.setText("Stop");
        btnStop.setToolTipText("STOP EXECUTION");
        btnStop.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnStop.setContentAreaFilled(false);
        btnStop.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStop.setEnabled(false);
        btnStop.setFocusCycleRoot(true);
        btnStop.setFocusPainted(false);
        btnStop.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStop.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/stop32.png"))); // NOI18N
        btnStop.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnStop, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnResults, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(progreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblRunning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnStop, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnResults, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(lblRunning, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(progreso, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 75)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 204, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("JMeta");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Algorithm execution", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 16), new java.awt.Color(255, 204, 0))); // NOI18N
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "First steps", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 14), new java.awt.Color(51, 0, 255))); // NOI18N

        boxStudyArea.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        boxStudyArea.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Mechanical Engineering", "Chemistry", "CEC2006 problems", "User defined" }));
        boxStudyArea.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 208, 249), 1, true));
        boxStudyArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boxStudyArea.setFocusable(false);
        boxStudyArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxStudyAreaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel7.setText("STUDY AREA");

        jLabel9.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel9.setText("OPTIMIZATION PROBLEM");

        boxCnops.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        boxCnops.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 208, 249), 1, true));
        boxCnops.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        boxCnops.setFocusable(false);
        boxCnops.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCnopsActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel10.setText("PARAMETER SETTING");

        jLabel11.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel11.setText("NUMBER OF ITERATIONS");

        spinnerExecution.setFont(new java.awt.Font("Montserrat", 0, 24)); // NOI18N
        spinnerExecution.setModel(new javax.swing.SpinnerNumberModel(1, 1, 30, 1));
        spinnerExecution.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 208, 249)));
        spinnerExecution.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        spinnerExecution.setFocusable(false);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customize parameters", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 14), new java.awt.Color(51, 0, 255))); // NOI18N

        txtBacterias.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtBacterias.setForeground(new java.awt.Color(36, 160, 95));
        txtBacterias.setBorder(null);
        txtBacterias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBacteriasKeyTyped(evt);
            }
        });

        txtTamanoPaso.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtTamanoPaso.setForeground(new java.awt.Color(36, 160, 95));
        txtTamanoPaso.setBorder(null);
        txtTamanoPaso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTamanoPasoKeyTyped(evt);
            }
        });

        txtCiclosQuimiotaxis.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtCiclosQuimiotaxis.setForeground(new java.awt.Color(36, 160, 95));
        txtCiclosQuimiotaxis.setBorder(null);
        txtCiclosQuimiotaxis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCiclosQuimiotaxisKeyTyped(evt);
            }
        });

        txtFactorEscalamiento.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtFactorEscalamiento.setForeground(new java.awt.Color(36, 160, 95));
        txtFactorEscalamiento.setBorder(null);
        txtFactorEscalamiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFactorEscalamientoKeyTyped(evt);
            }
        });

        txtBacteriasReproducir.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtBacteriasReproducir.setForeground(new java.awt.Color(36, 160, 95));
        txtBacteriasReproducir.setBorder(null);
        txtBacteriasReproducir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBacteriasReproducirKeyTyped(evt);
            }
        });

        txtFrecuenciaReproduccion.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtFrecuenciaReproduccion.setForeground(new java.awt.Color(36, 160, 95));
        txtFrecuenciaReproduccion.setBorder(null);
        txtFrecuenciaReproduccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFrecuenciaReproduccionKeyTyped(evt);
            }
        });

        txtNumeroEvaluaciones.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        txtNumeroEvaluaciones.setForeground(new java.awt.Color(36, 160, 95));
        txtNumeroEvaluaciones.setBorder(null);
        txtNumeroEvaluaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroEvaluacionesKeyTyped(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel19.setText("Bacteria");

        jLabel20.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel20.setText("Stepsize");

        jLabel21.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel21.setText("Chemotoxic cycles");

        jLabel22.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel22.setText("Scaling factor");

        jLabel24.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel24.setText("Bacteria to reproduce");

        jLabel23.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel23.setText("Reproduction frequency");

        jLabel25.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jLabel25.setText("Evaluations");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(100, 100, 100)
                        .addComponent(txtNumeroEvaluaciones))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(11, 11, 11)
                        .addComponent(txtFrecuenciaReproduccion))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(27, 27, 27)
                        .addComponent(txtBacteriasReproducir))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(83, 83, 83)
                        .addComponent(txtFactorEscalamiento))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(49, 49, 49)
                        .addComponent(txtCiclosQuimiotaxis))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(123, 123, 123)
                        .addComponent(txtTamanoPaso))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(txtBacterias, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(txtBacterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(txtTamanoPaso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(txtCiclosQuimiotaxis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(txtFactorEscalamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(txtBacteriasReproducir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(txtFrecuenciaReproduccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(txtNumeroEvaluaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtBacteriasReproducir.getAccessibleContext().setAccessibleDescription("");

        grupoDefinidoParametro.add(radioRecomendada);
        radioRecomendada.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        radioRecomendada.setText("Recommended");
        radioRecomendada.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioRecomendada.setFocusable(false);
        radioRecomendada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRecomendadaActionPerformed(evt);
            }
        });

        grupoDefinidoParametro.add(radioDefinida);
        radioDefinida.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        radioDefinida.setText("User Defined");
        radioDefinida.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        radioDefinida.setFocusable(false);
        radioDefinida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDefinidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioRecomendada)
                                    .addComponent(radioDefinida))
                                .addGap(170, 170, 170)
                                .addComponent(spinnerExecution, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boxStudyArea, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boxCnops, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(6, 6, 6)
                .addComponent(boxStudyArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel9)
                .addGap(6, 6, 6)
                .addComponent(boxCnops, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(radioRecomendada)
                        .addGap(6, 6, 6)
                        .addComponent(radioDefinida))
                    .addComponent(spinnerExecution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel3);

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Algorithm execution", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 16), new java.awt.Color(255, 204, 0))); // NOI18N
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel12.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel12.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 228;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        jPanel4.add(jLabel12, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel14.setText("Best known value");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 34, 0, 6);
        jPanel4.add(jLabel14, gridBagConstraints);

        txtNombre.setEditable(false);
        txtNombre.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 623;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        jPanel4.add(txtNombre, gridBagConstraints);

        txtValorConocido.setEditable(false);
        txtValorConocido.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 102;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 11, 0, 6);
        jPanel4.add(txtValorConocido, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel15.setText("Objective Function");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 724;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 0, 6);
        jPanel4.add(jLabel15, gridBagConstraints);

        texRestricciones.setEditable(false);
        texRestricciones.setBackground(new java.awt.Color(240, 240, 240));
        texRestricciones.setColumns(20);
        texRestricciones.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        texRestricciones.setLineWrap(true);
        texRestricciones.setRows(5);
        texRestricciones.setWrapStyleWord(true);
        jScrollPane1.setViewportView(texRestricciones);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 848;
        gridBagConstraints.ipady = 99;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 6);
        jPanel4.add(jScrollPane1, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel16.setText("Order of variables");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 733;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 0, 6);
        jPanel4.add(jLabel16, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel17.setText("Constraints");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 780;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 0, 6);
        jPanel4.add(jLabel17, gridBagConstraints);

        texFuncion.setEditable(false);
        texFuncion.setBackground(new java.awt.Color(240, 240, 240));
        texFuncion.setColumns(20);
        texFuncion.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        texFuncion.setLineWrap(true);
        texFuncion.setRows(5);
        texFuncion.setWrapStyleWord(true);
        texFuncion.setVerifyInputWhenFocusTarget(false);
        jScrollPane2.setViewportView(texFuncion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 848;
        gridBagConstraints.ipady = 85;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 6);
        jPanel4.add(jScrollPane2, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Montserrat", 1, 14)); // NOI18N
        jLabel18.setText("Variable range");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 755;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 6, 0, 6);
        jPanel4.add(jLabel18, gridBagConstraints);

        txtVariables.setEditable(false);
        txtVariables.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 800;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 6);
        jPanel4.add(txtVariables, gridBagConstraints);

        jScrollPane3.setBorder(null);

        texRangoVariable.setEditable(false);
        texRangoVariable.setBackground(new java.awt.Color(240, 240, 240));
        texRangoVariable.setColumns(20);
        texRangoVariable.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        texRangoVariable.setLineWrap(true);
        texRangoVariable.setRows(5);
        texRangoVariable.setWrapStyleWord(true);
        jScrollPane3.setViewportView(texRangoVariable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 850;
        gridBagConstraints.ipady = 84;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 184, 6);
        jPanel4.add(jScrollPane3, gridBagConstraints);

        jScrollPane5.setViewportView(jPanel4);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Fast results", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Montserrat", 1, 14), new java.awt.Color(40, 79, 147))); // NOI18N

        resultsQuick.setEditable(false);
        resultsQuick.setColumns(20);
        resultsQuick.setFont(new java.awt.Font("Montserrat", 0, 13)); // NOI18N
        resultsQuick.setLineWrap(true);
        resultsQuick.setRows(5);
        jScrollPane6.setViewportView(resultsQuick);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane6)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 70)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("BFOP");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("METAheuristic with Bacteria For Optimization Problems UI");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel3))
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE))
                .addContainerGap())
        );

        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/previous.png"))); // NOI18N
        jMenuItem1.setText("Previous");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cerrar.png"))); // NOI18N
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenu2.setFont(new java.awt.Font("Montserrat", 0, 16)); // NOI18N

        jMenuItem4.setFont(new java.awt.Font("Montserrat", 0, 14)); // NOI18N
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/acd24.png"))); // NOI18N
        jMenuItem4.setText("About");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Start start = new Start();
        start.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultsActionPerformed
        Results results = new Results(this, true, this.cnop, this.tsmbfoa);
        results.setVisible(true);
    }//GEN-LAST:event_btnResultsActionPerformed

    private void boxCnopsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCnopsActionPerformed

        int indexProblema = this.boxCnops.getSelectedIndex();

        if (indexProblema >= 0) {
            switch (this.indexSelect) {
                case 0:
                    switch (indexProblema) {
                        case 0:
                            this.cnop = new PressureVessel();
                            break;
                        case 1:
                            this.cnop = new TensionCompressionSpring();
                            break;
                    }
                    break;
                case 1:
                    switch (indexProblema) {
                        case 0:
                            this.cnop = new ProcessSynthesisYuan88();
                            break;
                        case 1:
                            this.cnop = new DesignReinforcedConcreteBeam();
                            break;
                        case 2:
                            this.cnop = new QuadraticallyConstrainedQuadraticProgram();
                            break;

                    }
                    break;
                case 2:
                    switch (indexProblema) {
                        case 0:
                            this.cnop = new G01_CEC2006();
                            break;
                        case 1:
                            this.cnop = new G02_CEC2006();
                            break;
                        case 2:
                            this.cnop = new G03_CEC2006();
                            break;
                        case 3:
                            this.cnop = new G04_CEC2006();
                            break;
                        case 4:
                            this.cnop = new G05_CEC2006();
                            break;
                        case 5:
                            this.cnop = new G06_CEC2006();
                            break;
                        case 6:
                            this.cnop = new G07_CEC2006();
                            break;
                        case 7:
                            this.cnop = new G08_CEC2006();
                            break;
                        case 8:
                            this.cnop = new G09_CEC2006();
                            break;
                        case 9:
                            this.cnop = new G10_CEC2006();
                            break;
                        case 10:
                            this.cnop = new G11_CEC2006();
                            break;
                        case 11:
                            this.cnop = new G12_CEC2006();
                            break;
                        case 12:
                            this.cnop = new G13_CEC2006();
                            break;
                        case 13:
                            this.cnop = new G15_CEC2006();
                            break;
                        case 14:
                            this.cnop = new G17_CEC2006();
                            break;
                        case 15:
                            this.cnop = new G18_CEC2006();
                            break;
                        case 16:
                            this.cnop = new G21_CEC2006();
                            break;
                        case 17:
                            this.cnop = new G22_CEC2006();
                            break;
                        case 18:
                            this.cnop = new G23_CEC2006();
                            break;
                        case 19:
                            this.cnop = new G24_CEC2006();
                            break;
                    }
                    break;
            }
            if (!this.radioDefinida.isSelected()) {
                this.limpiarConfiguracion();
            }

            this.radioRecomendada.doClick();
            this.mostrarProblemaOptimizacion();
        }
    }//GEN-LAST:event_boxCnopsActionPerformed


    private void boxStudyAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxStudyAreaActionPerformed
        this.indexSelect = this.boxStudyArea.getSelectedIndex();
        this.showCNOPs(this.indexSelect);

    }//GEN-LAST:event_boxStudyAreaActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed

        String sb = txtBacterias.getText();
        String step = txtTamanoPaso.getText();
        String nc = txtCiclosQuimiotaxis.getText();
        String scalin = txtFactorEscalamiento.getText();
        String br = txtBacteriasReproducir.getText();
        String fre = txtFrecuenciaReproduccion.getText();
        String eva = txtNumeroEvaluaciones.getText();

        if (!(sb.isBlank() || step.isBlank() || nc.isBlank() || scalin.isBlank() || br.isBlank() || fre.isBlank() || eva.isBlank())) {

            this.tsmbfoa = new TSMBFOA(cnop, false);

            this.execution = Integer.parseInt(this.spinnerExecution.getValue().toString());

            this.lblRunning.setForeground(Color.BLACK);
            this.resultsQuick.setForeground(Color.BLACK);
            this.lblRunning.setText("Please wait: " + execution + " independent executions...");

            this.resultsQuick.setText("-------------- We started! --------------"
                    + "\n" + this.cnop.getNameProblem()
                    + "\n-----------------------------------------\n");

            h1 = new Thread(this);
            h1.start();

            iniciarProgreso();

            this.btnStop.setEnabled(true);
            this.btnStart.setEnabled(false);
            this.btnResults.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "Some fields are empty.", "Error", JOptionPane.ERROR_MESSAGE);
            this.radioRecomendada.doClick();
        }

    }//GEN-LAST:event_btnStartActionPerformed

    @SuppressWarnings("deprecation")
    private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed

        int index = JOptionPane.showConfirmDialog(this, "Do you really want to cancel the execution?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (index == 0) {

            h1.stop();
            tiempo.stop();

            progreso.setForeground(Color.RED);

            this.btnStop.setEnabled(false);
            this.btnStart.setEnabled(true);

            this.lblRunning.setForeground(new Color(255, 0, 0));
            this.lblRunning.setText("Cancelled");

            this.resultsQuick.setForeground(Color.RED);
            this.resultsQuick.setText("-------------- Results --------------"
                    + "\nOperation cancelled"
                    + "\n-------------------------------------");

        }

    }//GEN-LAST:event_btnStopActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        About about = new About(this, true);
        about.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void radioRecomendadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRecomendadaActionPerformed
        this.mostrarConfiguracionRecomendada();
    }//GEN-LAST:event_radioRecomendadaActionPerformed

    private void radioDefinidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDefinidaActionPerformed
        limpiarConfiguracion();
    }//GEN-LAST:event_radioDefinidaActionPerformed

    private void txtBacteriasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBacteriasKeyTyped
        onlyNumbers(evt, 3, txtBacterias, false);
    }//GEN-LAST:event_txtBacteriasKeyTyped

    private void txtTamanoPasoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTamanoPasoKeyTyped
        onlyNumbers(evt, 7, txtTamanoPaso, true);
    }//GEN-LAST:event_txtTamanoPasoKeyTyped

    private void txtCiclosQuimiotaxisKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCiclosQuimiotaxisKeyTyped
        onlyNumbers(evt, 3, txtCiclosQuimiotaxis, false);
    }//GEN-LAST:event_txtCiclosQuimiotaxisKeyTyped

    private void txtFactorEscalamientoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFactorEscalamientoKeyTyped
        onlyNumbers(evt, 7, txtFactorEscalamiento, true);
    }//GEN-LAST:event_txtFactorEscalamientoKeyTyped

    private void txtBacteriasReproducirKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBacteriasReproducirKeyTyped
        onlyNumbers(evt, 3, txtBacteriasReproducir, false);
    }//GEN-LAST:event_txtBacteriasReproducirKeyTyped

    private void txtNumeroEvaluacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroEvaluacionesKeyTyped
        onlyNumbers(evt, 6, txtNumeroEvaluaciones, false);
    }//GEN-LAST:event_txtNumeroEvaluacionesKeyTyped

    private void txtFrecuenciaReproduccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFrecuenciaReproduccionKeyTyped
        onlyNumbers(evt, 3, txtFrecuenciaReproduccion, false);
    }//GEN-LAST:event_txtFrecuenciaReproduccionKeyTyped

    private void onlyNumbers(KeyEvent evt, int sizeText, JTextField field, boolean decimal) {
        int key = evt.getKeyChar();

        // Verificar si el car√°cter ingresado es un n√∫mero (0-9) o un punto (si decimal es verdadero)
        boolean numeros = (decimal) ? (key >= 48 && key <= 57 || key == 46) : (key >= 48 && key <= 57);

        // Si el car√°cter ingresado no es un n√∫mero v√°lido, consumir el evento para cancelar la entrada
        if (!numeros) {
            evt.consume();
        }

        // Verificar si el campo de texto ha alcanzado el tama√±o m√°ximo permitido
        if (field.getText().trim().length() == sizeText) {
            evt.consume();
        }

        // Si decimal es verdadero, verificar si el campo de texto ya contiene un punto y se intenta ingresar otro
        if (decimal) {
            if (field.getText().contains(".") && key == 46) {
                evt.consume();
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox boxCnops;
    private javax.swing.JComboBox boxStudyArea;
    private javax.swing.JButton btnResults;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    private javax.swing.ButtonGroup grupoDefinidoParametro;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel lblRunning;
    private javax.swing.JProgressBar progreso;
    private javax.swing.JRadioButton radioDefinida;
    private javax.swing.JRadioButton radioRecomendada;
    private javax.swing.JTextArea resultsQuick;
    private javax.swing.JSpinner spinnerExecution;
    private javax.swing.JTextArea texFuncion;
    private javax.swing.JTextArea texRangoVariable;
    private javax.swing.JTextArea texRestricciones;
    private javax.swing.JTextField txtBacterias;
    private javax.swing.JTextField txtBacteriasReproducir;
    private javax.swing.JTextField txtCiclosQuimiotaxis;
    private javax.swing.JTextField txtFactorEscalamiento;
    private javax.swing.JTextField txtFrecuenciaReproduccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumeroEvaluaciones;
    private javax.swing.JTextField txtTamanoPaso;
    private javax.swing.JTextField txtValorConocido;
    private javax.swing.JTextField txtVariables;
    // End of variables declaration//GEN-END:variables

    @SuppressWarnings("unchecked")
    private void showCNOPs(int indexSelect) {
        this.boxCnops.setEnabled(true);
        this.boxCnops.removeAllItems();
        switch (indexSelect) {
            case 0:  // FOR engineering          
                this.boxCnops.addItem("Pressure Vessel");
                this.boxCnops.addItem("Tension/compression spring");
                break;
            case 1: //FOR CHEMISTRY           
                this.boxCnops.addItem("Process synthesis MINLP");
                this.boxCnops.addItem("Design of a reinforced concrete beam");
                this.boxCnops.addItem("Quadratically constrained quadratic program");
                break;
            case 2:
                this.boxCnops.addItem("G01");
                this.boxCnops.addItem("G02");
                this.boxCnops.addItem("G03");
                this.boxCnops.addItem("G04");
                this.boxCnops.addItem("G05");
                this.boxCnops.addItem("G06");
                this.boxCnops.addItem("G07");
                this.boxCnops.addItem("G08");
                this.boxCnops.addItem("G09");
                this.boxCnops.addItem("G10");
                this.boxCnops.addItem("G11");
                this.boxCnops.addItem("G12");
                this.boxCnops.addItem("G13");
                this.boxCnops.addItem("G15");
                this.boxCnops.addItem("G17");
                this.boxCnops.addItem("G18");
                this.boxCnops.addItem("G21");
                this.boxCnops.addItem("G22");
                this.boxCnops.addItem("G23");
                this.boxCnops.addItem("G24");
                break;
            case 3:
                this.boxCnops.setEnabled(false);
                InputOP ip = new InputOP(this, true, this);
                ip.setVisible(true);
                this.mostrarProblemaOptimizacion();
                break;

        }

    }

    public void mostrarProblemaOptimizacion() {
        this.texRangoVariable.setText("");
        this.texRestricciones.setText("");

        this.txtNombre.setText(this.cnop.getNameProblem());
        this.txtValorConocido.setText("" + this.cnop.getBestKnownValue());
        this.texFuncion.setText("f(x) = " + this.cnop.getFunction());
        this.txtVariables.setText(this.cnop.getOrderVariables().toString());

        String[][] obj = this.cnop.getConstraintsInequality();

        if (obj != null) {
            for (int i = 0; i < obj.length; i++) {
                this.texRestricciones.append("g(" + (i + 1) + ") = "
                        + obj[i][0] + " " + obj[i][1] + " " + obj[i][2] + "\n");

            }
        }
        obj = null;
        obj = this.cnop.getConstraintsEquality();

        if (obj != null) {
            for (int i = 0; i < obj.length; i++) {
                this.texRestricciones.append("h(" + (i + 1) + ") = "
                        + obj[i][0] + " " + obj[i][1] + " " + obj[i][2] + "\n");
            }
        }
        double[][] rangos = this.cnop.getVariableRange();

        if (rangos != null) {
            for (int i = 0; i < rangos.length; i++) {
                this.texRangoVariable.append(this.cnop.getOrderVariables().get(i)
                        + " = [" + rangos[i][0] + "," + rangos[i][1] + "]\t");
            }
        }
    }

    public void setNewCNOP(CNOP cnop) {
        this.cnop = cnop;
    }

    public void mostrarConfiguracionRecomendada() {
        this.txtBacterias.setText("14");
        this.txtTamanoPaso.setText("0.0005");
        this.txtCiclosQuimiotaxis.setText("7");
        this.txtFactorEscalamiento.setText("1.95");
        this.txtBacteriasReproducir.setText("1");
        this.txtFrecuenciaReproduccion.setText("100");
        this.txtNumeroEvaluaciones.setText("20000");
    }

    public void limpiarConfiguracion() {
        this.txtBacterias.setText("");
        this.txtTamanoPaso.setText("");
        this.txtCiclosQuimiotaxis.setText("");
        this.txtFactorEscalamiento.setText("");
        this.txtBacteriasReproducir.setText("");
        this.txtFrecuenciaReproduccion.setText("");
        this.txtNumeroEvaluaciones.setText("");
    }

    public void limpiarProblemaOptimizacion() {
        this.radioRecomendada.setEnabled(true);
        this.texRangoVariable.setText("");
        this.texRestricciones.setText("");
        this.txtNombre.setText("");
        this.txtValorConocido.setText("");
        this.texFuncion.setText("");
        this.txtVariables.setText("");
    }

    public void setSettingParameter() {

        int sb = Integer.parseInt(this.txtBacterias.getText());
        double stepSize = Double.parseDouble(this.txtTamanoPaso.getText());
        int nc = Integer.parseInt(this.txtCiclosQuimiotaxis.getText());
        double scalingFactor = Double.parseDouble(this.txtFactorEscalamiento.getText());
        int bacteriaReproduce = Integer.parseInt(this.txtBacteriasReproducir.getText());
        int repcycle = Integer.parseInt(this.txtFrecuenciaReproduccion.getText());
        int evaluations = Integer.parseInt(this.txtNumeroEvaluaciones.getText());

        this.tsmbfoa.setSb(sb);
        this.tsmbfoa.setStepSize(stepSize);
        this.tsmbfoa.setNc(nc);
        this.tsmbfoa.setScalingFactor(scalingFactor);
        this.tsmbfoa.setBacteriaReproduce(bacteriaReproduce);
        this.tsmbfoa.setRepcycle(repcycle);
        this.tsmbfoa.setEvaluations(evaluations);
    }

    @Override
    @SuppressWarnings("deprecation")
    public void run() {

        Thread ct = Thread.currentThread();

        while (ct == h1) {
            this.toast = new Toast("We're done!", this.btnResults.getX(), this.btnResults.getY());
            this.setSettingParameter();
            tsmbfoa.setExecutions(execution);

            tsmbfoa.run();

            this.lblRunning.setForeground(new Color(0, 0, 255));
            this.lblRunning.setText("Successful execution (total time: " + this.tsmbfoa.getTimeSeconds() + " seconds)");

            this.btnStop.setEnabled(false);
            this.btnStart.setEnabled(true);
            this.btnResults.setEnabled(true);

            if (this.progreso.getValue() < 100) {
                this.progreso.setValue(100);
            }

            int indexAux = this.tsmbfoa.getBestResults()[0].length - 1;
            double svrAux = -1;

            for (int i = 0; i < this.tsmbfoa.getBestResults().length; i++) {
                if (this.tsmbfoa.getStatistic()[0] == this.tsmbfoa.getBestResults()[i][indexAux - 1]) {
                    svrAux = this.tsmbfoa.getBestResults()[i][indexAux];
                }
            }

            if (svrAux > 0) {
                this.resultsQuick.setForeground(Color.red);
            }

            this.resultsQuick.setText("-------------- We started! --------------"
                    + "\n" + this.cnop.getNameProblem()
                    + "\nSuccessful execution "
                    + "\n(total time: " + this.tsmbfoa.getTimeSeconds() + " seconds)"
                    + "\nExecution: " + this.tsmbfoa.getExecutions()
                    + "\nBest value:                " + this.tsmbfoa.getStatistic()[0]
                    + "\nConstraints violation sum: " + svrAux
                    + "\n-----------------------------------------\n");
            tiempo.stop();
            this.toast.showtoast();
            h1.stop();

        }

    }

    public void iniciarProgreso() {
        count = -1;
        progreso.setValue(0);
        progreso.setStringPainted(true);
        progreso.setForeground(Color.BLUE);
        tiempo = new Timer(20, new TimerListener());
        tiempo.start();
    }

    class TimerListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            count++;
            if (tsmbfoa.getAdvance() != progreso.getValue()) {
                progreso.setValue(tsmbfoa.getAdvance());
            }
            if (count == 15) {
                resultsQuick.append("o");
                count = 0;
            }

        }
    }

}
